import React, { useEffect, useRef, useState } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faArrowTrendUp,
  faRobot,
  faComment,
  faClose,
  faAngleRight,
} from "@fortawesome/free-solid-svg-icons";
import Chatform from "./Chatform";
import Chatmessage from "./Chatmessage";
import { webinfo } from "./Webinfo";

function Chatbot() {
  const [chathistory, setchathistory] = useState([
    {
      hideInChat: true,
      role: "model",
      text: webinfo,
    },
  ]);
  const [showbot, setshowbot] = useState(false);

  const chatbodyRef = useRef();

  const stockKeywords = [
    "stock",
    "stocks",
    "stock market",
    "stocks market",
    "stock price",
    "stocks price",
    "shares",
    "portfolio",
    "NASDAQ",
    "NYSE",
    "trading",
    "NIFTY",
    "investment",
    "financials",
    "equity",
    "bond",
    "IPO",
    "index",
    "MMM",
    "AOS",
    "ABT",
    "ABBV",
    "ACN",
    "ADBE",
    "AMD",
    "AES",
    "AFL",
    "A",
    "APD",
    "ABNB",
    "AKAM",
    "ALB",
    "ARE",
    "ALGN",
    "ALLE",
    "LNT",
    "ALL",
    "GOOGL",
    "GOOG",
    "MO",
    "AMZN",
    "AMCR",
    "AEE",
    "AAL",
    "AEP",
    "AXP",
    "AIG",
    "AMT",
    "AWK",
    "AMP",
    "AME",
    "AMGN",
    "APH",
    "ADI",
    "ANSS",
    "AON",
    "APA",
    "AAPL",
    "AMAT",
    "APTV",
    "ACGL",
    "ADM",
    "ANET",
    "AJG",
    "AIZ",
    "T",
    "ATO",
    "ADSK",
    "ADP",
    "AZO",
    "AVB",
    "AVY",
    "AXON",
    "BKR",
    "BALL",
    "BAC",
    "BK",
    "BBWI",
    "BAX",
    "BDX",
    "BBY",
    "BIO",
    "TECH",
    "BIIB",
    "BLK",
    "BX",
    "BA",
    "BKNG",
    "BWA",
    "BSX",
    "BMY",
    "AVGO",
    "BR",
    "BRO",
    "BLDR",
    "BG",
    "BXP",
    "CDNS",
    "CZR",
    "CPT",
    "CPB",
    "COF",
    "CAH",
    "KMX",
    "CCL",
    "CARR",
    "CTLT",
    "CAT",
    "CBOE",
    "CBRE",
    "CDW",
    "CE",
    "COR",
    "CNC",
    "CNP",
    "CF",
    "CHRW",
    "CRL",
    "SCHW",
    "CHTR",
    "CVX",
    "CMG",
    "CB",
    "CHD",
    "CI",
    "CINF",
    "CTAS",
    "CSCO",
    "C",
    "CFG",
    "CLX",
    "CME",
    "CMS",
    "KO",
    "CTSH",
    "CL",
    "CMCSA",
    "CAG",
    "COP",
    "ED",
    "STZ",
    "CEG",
    "COO",
    "CPRT",
    "GLW",
    "CPAY",
    "CTVA",
    "CSGP",
    "COST",
    "CTRA",
    "CRWD",
    "CCI",
    "CSX",
    "CMI",
    "CVS",
    "DHR",
    "DRI",
    "DVA",
    "DAY",
    "DECK",
    "DE",
    "DAL",
    "DVN",
    "DXCM",
    "FANG",
    "DLR",
    "DFS",
    "DG",
    "DLTR",
    "D",
    "DPZ",
    "DOV",
    "DOW",
    "DHI",
    "DTE",
    "DUK",
    "DD",
    "EMN",
    "ETN",
    "EBAY",
    "ECL",
    "EIX",
    "EW",
    "EA",
    "ELV",
    "EMR",
    "ENPH",
    "ETR",
    "EOG",
    "EPAM",
    "EQT",
    "EFX",
    "EQIX",
    "EQR",
    "ESS",
    "EL",
    "ETSY",
    "EG",
    "EVRG",
    "ES",
    "EXC",
    "EXPE",
    "EXPD",
    "EXR",
    "XOM",
    "FFIV",
    "FDS",
    "FICO",
    "FAST",
    "FRT",
    "FDX",
    "FIS",
    "FITB",
    "FSLR",
    "FE",
    "FI",
    "FMC",
    "F",
    "FTNT",
    "FTV",
    "FOXA",
    "FOX",
    "BEN",
    "FCX",
    "GRMN",
    "IT",
    "GE",
    "GEHC",
    "GEN",
    "GNRC",
    "GD",
    "GIS",
    "GM",
    "GPC",
    "GILD",
    "GPN",
    "GL",
    "GDDY",
    "GS",
    "HAL",
    "HIG",
    "HAS",
    "HCA",
    "DOC",
    "HSIC",
    "HSY",
    "HES",
    "HPE",
    "HLT",
    "HOLX",
    "HD",
    "HON",
    "HRL",
    "HST",
    "HWM",
    "HPQ",
    "HUBB",
    "HUM",
    "HBAN",
    "HII",
    "IBM",
    "IEX",
    "IDXX",
    "ITW",
    "INCY",
    "IR",
    "PODD",
    "INTC",
    "ICE",
    "IFF",
    "IP",
    "IPG",
    "INTU",
    "ISRG",
    "IVZ",
    "INVH",
    "IQV",
    "IRM",
    "JBHT",
    "JBL",
    "JKHY",
    "J",
    "JNJ",
    "JCI",
    "JPM",
    "JNPR",
    "K",
    "KVUE",
    "KDP",
    "KEY",
    "KEYS",
    "KMB",
    "KIM",
    "KMI",
    "KKR",
    "KLAC",
    "KHC",
    "KR",
    "LHX",
    "LH",
    "LRCX",
    "LW",
    "LVS",
    "LDOS",
    "LEN",
    "LLY",
    "LIN",
    "LYV",
    "LKQ",
    "LMT",
    "L",
    "LOW",
    "LULU",
    "LYB",
    "MTB",
    "MRO",
    "MPC",
    "MKTX",
    "MAR",
    "MMC",
    "MLM",
    "MAS",
    "MA",
    "MTCH",
    "MKC",
    "MCD",
    "MCK",
    "MDT",
    "MRK",
    "META",
    "MET",
    "MTD",
    "MGM",
    "MCHP",
    "MU",
    "MSFT",
    "MAA",
    "MRNA",
    "MHK",
    "MOH",
    "TAP",
    "MDLZ",
    "MPWR",
    "MNST",
    "MCO",
    "MS",
    "MOS",
    "MSI",
    "MSCI",
    "NDAQ",
    "NTAP",
    "NFLX",
    "NEM",
    "NWSA",
    "NWS",
    "NEE",
    "NKE",
    "NI",
    "NDSN",
    "NSC",
    "NTRS",
    "NOC",
    "NCLH",
    "NRG",
    "NUE",
    "NVDA",
    "NVR",
    "NXPI",
    "ORLY",
    "OXY",
    "ODFL",
    "OMC",
    "ON",
    "OKE",
    "ORCL",
    "OTIS",
    "PCAR",
    "PKG",
    "PANW",
    "PARA",
    "PH",
    "PAYX",
    "PAYC",
    "PYPL",
    "PNR",
    "PEP",
    "PFE",
    "PCG",
    "PM",
    "PSX",
    "PNW",
    "PNC",
    "POOL",
    "PPG",
    "PPL",
    "PFG",
    "PG",
    "PGR",
    "PLD",
    "PRU",
    "PEG",
    "PTC",
    "PSA",
    "PHM",
    "QRVO",
    "PWR",
    "QCOM",
    "DGX",
    "RL",
    "RJF",
    "RTX",
    "O",
    "REG",
    "REGN",
    "RF",
    "RSG",
    "RMD",
    "RVTY",
    "ROK",
    "ROL",
    "ROP",
    "ROST",
    "RCL",
    "SPGI",
    "CRM",
    "SBAC",
    "SLB",
    "STX",
    "SRE",
    "NOW",
    "SHW",
    "SPG",
    "SWKS",
    "SJM",
    "SNA",
    "SO",
    "LUV",
    "SWK",
    "SBUX",
    "STT",
    "STLD",
    "STE",
    "SYK",
    "SMCI",
    "SYF",
    "SNPS",
    "SYY",
    "TMUS",
    "TROW",
    "TTWO",
    "TPR",
    "TRGP",
    "TGT",
    "TEL",
    "TDY",
    "TFX",
    "TER",
    "TSLA",
    "TXN",
    "TXT",
    "TMO",
    "TJX",
    "TSCO",
    "TT",
    "TDG",
    "TRV",
    "TRMB",
    "TFC",
    "TYL",
    "TSN",
    "USB",
    "UBER",
    "UDR",
    "ULTA",
    "UNP",
    "UAL",
    "UPS",
    "URI",
    "UNH",
    "UHS",
    "VLO",
    "VTR",
    "VLTO",
    "VRSN",
    "VRSK",
    "VZ",
    "VRTX",
    "VTRS",
    "VICI",
    "V",
    "VST",
    "VMC",
    "WRB",
    "GWW",
    "WAB",
    "WBA",
    "WMT",
    "DIS",
    "WBD",
    "WM",
    "WAT",
    "WEC",
    "WFC",
    "WELL",
    "WST",
    "WDC",
    "WY",
    "WMB",
    "WTW",
    "WYNN",
    "XEL",
    "XYL",
    "YUM",
    "ZBRA",
    "ZBH",
    "ZTS",
    "dividends",
    "AAPL",
    "MSFT",
    "GOOGL",
    "AMZN",
    "META",
    "TSLA",
    "NVDA",
    "ORCL",
    "MMM",
    "Bitcoin",
    "Bitcoins",
    "cryptocurrency",
    "crypto",
    "blockchain",
    "Ethereum",
    "ETH",
    "Litecoin",
    "LTC",
    "Dogecoin",
    "DOGE",
    "Cardano",
    "ADA",
    "Ripple",
    "XRP",
    "Solana",
    "SOL",
    "Tether",
    "USDT",
    "Binance Coin",
    "BNB",
    "Polkadot",
    "DOT",
    "Uniswap",
    "UNI",
    "Chainlink",
    "LINK",
    "Shiba Inu",
    "SHIB",
    "Stellar",
    "XLM",
    "Monero",
    "XMR",
    "Tron",
    "TRX",
    "EOS",
    "DeFi",
    "altcoin",
    "altcoins",
    "crypto exchange",
    "crypto wallet",
    "cold wallet",
    "hot wallet",
    "mining",
    "crypto mining",
    "hashrate",
    "proof of work",
    "proof of stake",
    "smart contracts",
    "NFT",
    "non-fungible token",
    "Metaverse",
    "Web3",
    "stablecoin",
    "decentralized finance",
    "crypto trading",
    "ICO",
    "initial coin offering",
    "staking",
    "yield farming",
    "airdrops",
    "tokenomics",
    "gas fees",
    "crypto regulation",
    "market cap",
    "whale",
    "crypto bull market",
    "crypto bear market",
    "crypto volatility",
    "Satoshi",
    "cryptography",
    "BTC",
    "crypto adoption",
    "crypto news",
    "crypto community",
    "crypto assets",
    "crypto portfolio",
    "crypto price",
    "crypto analytics",
    "crypto charts",
    "crypto trends",
    "HCLTECH", // Tech
    "HDFCBANK",
    "ICICIBANK",
    "SBIN",
    "AXISBANK", // Banks
    "ITC",
    "HINDUNILVR",
    "BRITANNIA", // FMCG
    "RELIANCE",
    "ONGC",
    "BPCL", // Energy
    "HSBA.L",
    "BP.L",
    "SHEL.L",
    "RIO.L",
    "SAP.DE",
    "BAS.DE",
    "BMW.DE",
    "ALV.DE",
    "BNP.PA",
    "AIR.PA",
    "MC.PA",
    "OR.PA",
    "BABA",
    "JD",
    "TCEHY",
    "NIO",
    "TM",
    "SONY",
    "NTDOY",
    "SFTBY",
    "BTC-USD",
    "ETH-USD",
    "BNB-USD",
    "XRP-USD",
    "ADA-USD",
    "NIFTY 50",
    "NIFTY Next 50",
    "SENSEX",
    "NIFTY Bank",
    "NIFTY IT",
    "NIFTY Pharma",
    "NIFTY FMCG",
    "S&P 500",
    "Dow Jones Industrial Average (DJIA)",
    "NASDAQ Composite",
    "Russell 2000",
    "FTSE 100 (UK)",
    "DAX 40 (Germany)",
    "CAC 40 (France)",
    "EURO STOXX 50",
    "Nikkei 225 (Japan)",
    "Hang Seng Index (Hong Kong)",
    "Shanghai Composite (China)",
    "Kospi (South Korea)",
    "ASX 200 (Australia)",
    "MSCI World Index",
    "MSCI Emerging Markets",
    "Dow Jones Global Index",
    "Crypto Market Cap Index",
    "Hello",
    "Hi",
    "Hey",
    "Greetings",
    "Howdy",
    "Good day",
    "What's up",
    "Hiya",
    "Hey there",
    "Yo",
    "What is your name",
    "Good morning",
    "Good afternoon",
    "Good evening",
    "Welcome",
    "Nice to meet you",
    "Introduce",
    "yourself",
    "Thank you",
    "Thanks a lot",
    "Many thanks",
    "I appreciate it",
    "Thanks so much",
    "Thanks a million",
    "I'm grateful",
    "Much appreciated",
    "I am thankful",
    "I canâ€™t thank you enough",
    "I owe you one",
    "I appreciate your help",
    "You are a lifesaver",
    "I am truly grateful",
    "I am in your debt",
    "I am sorry",
  ];

  const isStockRelated = (query) => {
    const lowerCaseQuery = query;
    return stockKeywords.some((keyword) => lowerCaseQuery.includes(keyword));
  };

  const generatebotresponse = async (history) => {
    const updatehistory = (text, isError = false) => {
      setchathistory((prev) => [
        ...prev.filter((msg) => msg.text !== "Thinking..."),
        { role: "model", text, isError },
      ]);
    };

    const userQuery = history[history.length - 1]?.text || "";

    if (!isStockRelated(userQuery)) {
      updatehistory(
        "I can only assist with stock-related queries. Please ask about stocks or investments.",
        true
      );
      return;
    }

    history = history.map(({ role, text }) => ({ role, parts: [{ text }] }));

    const requestOptions = {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ contents: history }),
    };

    try {
      const response = await fetch(
        process.env.NEXT_PUBLIC_API_URL,
        requestOptions
      );
      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error?.message || "Something went wrong!");
      }

      const apiresponse = data.candidates[0].content.parts[0].text
        .replace(/\*\*(.*?)\*\*/g, "$1")
        .trim();
      updatehistory(apiresponse);
    } catch (error) {
      updatehistory(error.message, true);
    }
  };

  useEffect(() => {
    if (chatbodyRef.current) {
      chatbodyRef.current.scrollTo({
        top: chatbodyRef.current.scrollHeight,
        behavior: "smooth",
      });
    }
  }, [chathistory]);

  return (
    <div className={`chatbot-body ${showbot ? " show-chatbot" : ""}`}>
      <button onClick={() => setshowbot((prev) => !prev)} id="chatbot-toggler">
        <span className="material-symbols-rounded">
          <FontAwesomeIcon icon={faComment} />
        </span>
        <span className="material-symbols-rounded">
          <FontAwesomeIcon icon={faClose} />
        </span>
      </button>
      <div className="chatbot-popup">
        <div className="chat-header">
          <div className="header-info">
            <label>
              <FontAwesomeIcon icon={faArrowTrendUp} />
            </label>
            <h2 className="logo-text">CryptoBot</h2>
          </div>
          <button
            onClick={() => setshowbot((prev) => !prev)}
            className="material-symbols-rounded"
          >
            <FontAwesomeIcon icon={faAngleRight} />
          </button>
        </div>

        <div ref={chatbodyRef} className="chat-body">
          <div className="message bot-message">
            <label>
              <FontAwesomeIcon icon={faRobot} />
            </label>
            <p className="message-text">
              Hey there ðŸ‘‹ <br /> How can I help you?
            </p>
          </div>
          {chathistory.map((chat, index) => (
            <Chatmessage key={index} chat={chat} />
          ))}
        </div>

        <div className="chat-footer">
          <Chatform
            chathistory={chathistory}
            setchathistory={setchathistory}
            generatebotresponse={generatebotresponse}
          />
        </div>
      </div>
    </div>
  );
}

export default Chatbot;
